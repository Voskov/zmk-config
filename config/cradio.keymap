/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define TAPPING_TERM 210
#define QUICK_TAP    150

#define ________ &trans

&lt {
	flavor = "hold-preferred";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};

&mt {
	flavor = "balanced";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};

&caps_word {
	continue-list = <UNDER MINUS BSPC RSHFT LSHFT>;
};

/ {
	behaviors {
		gresc: grave_escape {
			label = "grave_escape";
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			mods = <(MOD_LGUI|MOD_RGUI)>;
			bindings = <&kp ESC>, <&kp GRAVE>;
		};
		ht: hold_tap {
			label = "hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};
		lht: left_positional_hold_tap {
			label = "left_positional_hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <
							5  6  7  8  9
			10 11 12 13    15 16 17 18 19
						   25 26 27 28 29
				  30 31 32 33>;
		};
		rht: right_positional_hold_tap {
			label = "right_positional_hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <
			 0  1  2  3  4
			10 11 12 13 14    16 17 18 19
			20 21 22 23 24
						30 31 32 33>;
		};
	};
};

#define COMBO(name, keypress, keypos) \
combo_##name {                        \
	timeout-ms = <30>;                \
	bindings = <keypress>;            \
	key-positions = <keypos>;         \
};
/* Combo key positions
 0  1  2  3  4         5  6  7  8  9
10 11 12 13 14        15 16 17 18 19
20 21 22 23 24        25 26 27 28 29
			30 31  32 33             */

/ {
	combos {
		compatible = "zmk,combos";
		COMBO(vol_up_l, &kp C_VOL_UP,  4 14)
		COMBO(vol_dn_l, &kp C_VOL_DN, 14 24)
		COMBO(vol_up_l, &kp C_VOL_UP,  5 15)
		COMBO(vol_dn_l, &kp C_VOL_DN, 15 25)
	};
};

#define HRML(k1,k2,k3,k4) &lht LGUI k1   &lht LALT k2   &lht LSHFT k3   &lht LCTRL k4
#define HRMR(k1,k2,k3,k4) &rht RCTRL k1  &rht RSHFT k2  &rht RALT k3    &rht RGUI k4

/ { 

        keymap {
                compatible = "zmk,keymap";
                
       	default_layer {
		bindings = <
		&kp B   &kp W   &kp E   &kp R   &kp T 				&kp Y   &kp U   &kp I       &kp O   &kp N 
		HRML(A,     S,      D,      F)  &kp G               &kp H   HRMR(J,     K,          L,    SEMICOLON)
		&kp Z   &kp X   &kp C   &kp V   &kp Q				&kp P   &kp M   &kp CMMA    &kp DOT &mt LSFT RET
          				    &lt 3 TAB   &lt 2 SPACE			&lt 2 SPACE     &lt 3 RET 
		>;
		};

       	CMK_layer {
		bindings = <
		&kp Q   &kp W   &kp F   &kp P   &kp G 				&kp J   &kp L   &kp U       &kp Y   &kp K
		HRML(A,     R,      S,      T)  &kp D               &kp H   HRMR(N,     E,          I,         O)
		&kp Z   &kp X   &kp C   &kp V   &kp B				&kp SEMICOLON   &kp M   &kp CMMA    &kp DOT &mt LSFT RET
          				    &lt 3 TAB   &lt 2 SPACE			&lt 2 SPACE     &lt 3 RET 
		>;
		};

       	left_layer {
		bindings = <
        &kp RPAR    &kp EXCL    &kp AT      &kp LBRC    &kp RBRC        &kp PG_UP   &kp HOME    &kp UP      &kp END     &kp MINUS
        &kp ESC     &kp HASH    &kp ASTRK   &kp LBKT    &kp RBKT        &kp PG_DN   &kp LEFT    &kp DOWN    &kp RIGHT   &kp SQT
        &kp GRAVE   &kp DLLR    &kp AMPS    &kp LPAR    &kp TAB         &kp BSPC    &kp EQUAL   &kp DEL     &kp INS     &kp FSLH
					                        &mo 4 		&mo 4			&mo 4	  &mo 4 
		>;
		};
		
		right_layer {
		bindings = <
	    &kp K_APP &kp F2    &kp F3    &kp F4    &kp C_VOL_UP    	&kp C_VOL_UP  &kp N7    &kp N8    &kp N9    &kp N0
	    &kp F5    &kp F6    &kp F7    &kp F8    &kp C_VOL_DN        &kp C_VOL_DN  &kp N4    &kp N5    &kp N6    &kp BSLH
	    &kp F9    &kp F10   &kp F11   &kp F12   &kp F1         		&kp BSPC      &kp N1    &kp N2    &kp N3    &kp FSLH
					  					&mo 4 	&mo 4				&mo 4		  &mo 4	
		>;
		};	
		
		conf_layer {
		bindings = <
		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 4	&bt BT_SEL 5		________	________	________	________	________
		&reset		&bt BT_PRV	&bt BT_NXT	________	&out OUT_BLE						________	________	________	________	&reset
		&bootloader	&bt BT_CLR	________	________	&out OUT_USB						________	________	________	________	&bootloader
										________	________		________	________
		>;
		};	
        
	};
};
